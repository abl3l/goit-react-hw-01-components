{"version":3,"sources":["components/Profile/Profile.styled.js","components/Profile/Profile.js","components/Statistics/Statistics.styled.js","components/Statistics/generateColor.js","components/Statistics/Statistics.js","components/Friends/Friends.styled.js","components/Friends/Friend.js","components/Transaction/Transaction.styled.js","components/Transaction/Transaction.js","components/App.js","index.js"],"names":["Profile","styled","div","Description","Avatar","img","Name","p","Tag","Location","Stats","ul","List","li","Label","span","Quantity","Profiles","user","alt","src","avatar","name","tag","location","stats","followers","views","likes","defaultProps","Statistics","section","Title","h2","StatsList","Percentage","generateColor","Math","floor","random","toString","Statistic","map","el","key","id","style","backgroundColor","label","percentage","title","Friends","FriendsItem","Online","Offline","FriendList","friends","isOnline","Transactions","table","Head","tr","HeadItem","th","Row","RowItem","td","TransactionHistory","transactions","type","amount","currency","App","Friend","Transaction","ReactDOM","render","document","getElementById"],"mappings":"s2JAEO,IAAMA,EAAUC,IAAOC,IAAV,KASPC,EAAcF,IAAOC,IAAV,KAOXE,EAASH,IAAOI,IAAV,KAONC,EAAOL,IAAOM,EAAV,KAKJC,EAAMP,IAAOM,EAAV,KAIHE,EAAWR,IAAOM,EAAV,KAIRG,EAAQT,IAAOU,GAAV,KAMLC,EAAOX,IAAOY,GAAV,KAOJC,EAAQb,IAAOc,KAAV,KAKLC,EAAWf,IAAOc,KAAV,KCzCfE,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,OACf,kBAACnB,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,CAAQgB,IAAKF,EAAKG,OAAQF,IAAKA,IAC/B,kBAACb,EAAD,KAAOY,EAAKI,MACZ,kBAACd,EAAD,SAAOU,EAAKK,KACZ,kBAACd,EAAD,KAAWS,EAAKM,WAElB,kBAACd,EAAD,KACE,kBAACE,EAAD,KACE,kBAACE,EAAD,kBACA,kBAACE,EAAD,KAAWE,EAAKO,MAAMC,YAExB,kBAACd,EAAD,KACE,kBAACE,EAAD,cACA,kBAACE,EAAD,KAAWE,EAAKO,MAAME,QAExB,kBAACf,EAAD,KACE,kBAACE,EAAD,cACA,kBAACE,EAAD,KAAWE,EAAKO,MAAMG,WAM9BX,EAASY,aAAe,CACtBV,IAAK,eAkBQF,Q,m7BCzDR,IAAMa,EAAa7B,IAAO8B,QAAV,KAKVC,EAAQ/B,IAAOgC,GAAV,KAKLvB,EAAQT,IAAOU,GAAV,KAQLuB,EAAYjC,IAAOY,GAAV,KAMTC,EAAQb,IAAOc,KAAV,KAQLoB,EAAalC,IAAOc,KAAV,KC9BRqB,MAJf,WACE,MAAO,IAAMC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,KCWvDC,EAAY,SAAC,GAAD,IAAGhB,EAAH,EAAGA,MAAH,OAChB,kBAACK,EAAD,KACE,kBAACE,EAAD,MACA,kBAAC,EAAD,KACGP,EAAMiB,KAAI,SAAAC,GAAE,OACX,kBAACT,EAAD,CACEU,IAAKD,EAAGE,GACRC,MAAO,CAAEC,gBAAgB,GAAD,OAAKX,OAE7B,kBAAC,EAAD,KAAQO,EAAGK,OACX,kBAACb,EAAD,KAAaQ,EAAGM,mBAO1BR,EAAUZ,aAAe,CACvBqB,MAAO,gBAcMT,Q,4pCC1CR,IAAMU,GAAUlD,IAAOU,GAAV,KAQPyC,GAAcnD,IAAOY,GAAV,KAcXT,GAASH,IAAOI,IAAV,KAKNgD,GAASpD,IAAOc,KAAV,KAQNuC,GAAUrD,IAAOc,KAAV,KASPT,GAAOL,IAAOM,EAAV,KCnBFgD,GAhBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,kBAACL,GAAD,KACGK,EAAQd,KAAI,SAAAC,GAAE,OACb,kBAACS,GAAD,CAAaR,IAAKD,EAAGE,IAClBF,EAAGc,SAAW,kBAACJ,GAAD,MAAoB,kBAACC,GAAD,MACnC,kBAAC,GAAD,CAAQlC,IAAKuB,EAAGtB,OAAQF,IAAI,WAC5B,kBAAC,GAAD,KAAOwB,EAAGrB,Y,s0BCfX,IAAMoC,GAAezD,IAAO0D,MAAV,MAMZC,GAAO3D,IAAO4D,GAAV,MAIJC,GAAW7D,IAAO8D,GAAV,MAURC,GAAM/D,IAAO4D,GAAV,MAOHI,GAAUhE,IAAOiE,GAAV,MCaLC,GAhCY,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACzB,kBAACV,GAAD,KACE,+BACE,kBAACE,GAAD,KACE,kBAACE,GAAD,aACA,kBAACA,GAAD,eACA,kBAACA,GAAD,mBAGJ,+BACGM,EAAa1B,KAAI,SAAAC,GAAE,OAClB,kBAACqB,GAAD,CAAKpB,IAAKD,EAAGE,IACX,kBAACoB,GAAD,KAAUtB,EAAG0B,MACb,kBAACJ,GAAD,KAAUtB,EAAG2B,QACb,kBAACL,GAAD,KAAUtB,EAAG4B,iB,SCLRC,GATH,kBACV,6BACE,kBAAC,EAAD,CAAUtD,KAAMA,IAChB,kBAACuD,GAAD,CAAYjB,QAASA,KACrB,kBAAC,EAAD,CAAW/B,MAAOA,IAClB,kBAACiD,GAAD,CAAoBN,aAAcA,OCXtCO,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d1e3af47.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Profile = styled.div`\n  max-width: 250px;\n  padding-top: 20px;\n  text-align: center;\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\n`;\n\nexport const Description = styled.div`\n  margin: 0 auto;\n  padding: 30px 60px;\n  text-align: center;\n  background-color: #fff;\n`;\n\nexport const Avatar = styled.img`\n  display: block;\n  margin: 0 auto 30px;\n  max-width: 100%;\n  height: auto;\n  border-radius: 50%;\n`;\nexport const Name = styled.p`\n  font-size: 18px;\n  line-height: 32px;\n  color: #122236;\n`;\nexport const Tag = styled.p`\n  font-size: 14px;\n  color: #768696;\n`;\nexport const Location = styled.p`\n  font-size: 14px;\n  color: #768696;\n`;\nexport const Stats = styled.ul`\n  padding-inline-start: 0;\n  display: flex;\n  list-style: none;\n  border-top: 1px solid #e4e9ef;\n`;\nexport const List = styled.li`\n  width: 190px;\n  border-right: 1px solid #e4e9ef;\n  background-color: #f1f6fc;\n  text-align: center;\n  padding: 20px 0px 24px;\n`;\nexport const Label = styled.span`\n  display: block;\n  font-size: 12px;\n  color: #bec7d0;\n`;\nexport const Quantity = styled.span`\n  font-size: 14px;\n  font-weight: 700;\n  color: #1f3349;\n`;\n","import React from 'react';\nimport T from 'prop-types';\nimport {\n  Profile,\n  Description,\n  Avatar,\n  Name,\n  Tag,\n  Location,\n  Stats,\n  List,\n  Label,\n  Quantity,\n} from './Profile.styled';\n\nconst Profiles = ({ user, alt }) => (\n  <Profile>\n    <Description>\n      <Avatar src={user.avatar} alt={alt}></Avatar>\n      <Name>{user.name}</Name>\n      <Tag>@{user.tag}</Tag>\n      <Location>{user.location}</Location>\n    </Description>\n    <Stats>\n      <List>\n        <Label>Followers</Label>\n        <Quantity>{user.stats.followers}</Quantity>\n      </List>\n      <List>\n        <Label>Views</Label>\n        <Quantity>{user.stats.views}</Quantity>\n      </List>\n      <List>\n        <Label>Likes</Label>\n        <Quantity>{user.stats.likes}</Quantity>\n      </List>\n    </Stats>\n  </Profile>\n);\n\nProfiles.defaultProps = {\n  alt: 'User Avatar',\n};\n\nProfiles.propTypes = {\n  user: T.shape({\n    name: T.string.isRequired,\n    tag: T.string.isRequired,\n    location: T.string.isRequired,\n    avatar: T.string.isRequired,\n    stats: T.shape({\n      followers: T.number.isRequired,\n      views: T.number.isRequired,\n      likes: T.number.isRequired,\n    }),\n  }).isRequired,\n  alt: T.string,\n};\n\nexport default Profiles;\n","import styled from 'styled-components';\n\nexport const Statistics = styled.section`\n  background-color: #fff;\n  text-align: center;\n  padding-top: 20px;\n`;\nexport const Title = styled.h2`\n  padding-bottom: 10px;\n  text-transform: uppercase;\n  font-weight: 500;\n`;\nexport const Stats = styled.ul`\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  flex-grow: 1;\n  list-style-type: none;\n  align-items: stretch;\n`;\nexport const StatsList = styled.li`\n  width: 100%;\n  padding-bottom: 25px;\n  padding-top: 25px;\n`;\n\nexport const Label = styled.span`\n  margin-bottom: 8px;\n  font-size: 16px;\n  display: block;\n  color: #000;\n  font-weight: bold;\n`;\n\nexport const Percentage = styled.span`\n  font-size: 18px;\n  display: block;\n  color: #000;\n  font-weight: bold;\n`;\n","function generateColor() {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n}\n\nexport default generateColor;\n","import React from 'react';\nimport T from 'prop-types';\nimport {\n  Statistics,\n  Title,\n  Stats,\n  StatsList,\n  Label,\n  Percentage,\n} from './Statistics.styled';\nimport generateColor from './generateColor';\n\nconst Statistic = ({ stats }) => (\n  <Statistics>\n    <Title></Title>\n    <Stats>\n      {stats.map(el => (\n        <StatsList\n          key={el.id}\n          style={{ backgroundColor: `${generateColor()}` }}\n        >\n          <Label>{el.label}</Label>\n          <Percentage>{el.percentage}</Percentage>\n        </StatsList>\n      ))}\n    </Stats>\n  </Statistics>\n);\n\nStatistic.defaultProps = {\n  title: 'Upload stats',\n};\n\nStatistic.propTypes = {\n  title: T.string,\n  stats: T.arrayOf(\n    T.shape({\n      id: T.string.isRequired,\n      label: T.string.isRequired,\n      percentage: T.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistic;\n","import styled from 'styled-components';\n\nexport const Friends = styled.ul`\n  width: 250px;\n  display: flex;\n  flex-direction: column;\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const FriendsItem = styled.li`\n  max-width: 100%;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  background-color: #fff;\n  margin-top: 10px;\n  padding: 20px 0 20px 0;\n  font-weight: 600;\n  font-size: 18px;\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 20%;\n  padding: 0px 10px 0px 10px;\n`;\n\nexport const Online = styled.span`\n  margin-left: 5px;\n  height: 25px;\n  width: 25px;\n  background-color: rgb(23, 221, 99);\n  border-radius: 50%;\n  display: inline-block;\n`;\nexport const Offline = styled.span`\n  margin-left: 5px;\n  height: 25px;\n  width: 25px;\n  border-radius: 50%;\n  display: inline-block;\n  background-color: rgb(228, 16, 16);\n`;\n\nexport const Name = styled.p`\n  font-size: 20px;\n`;\n","import React from 'react';\nimport T from 'prop-types';\nimport {\n  Friends,\n  FriendsItem,\n  Avatar,\n  Online,\n  Offline,\n  Name,\n} from './Friends.styled';\n\nconst FriendList = ({ friends }) => (\n  <Friends>\n    {friends.map(el => (\n      <FriendsItem key={el.id}>\n        {el.isOnline ? <Online></Online> : <Offline></Offline>}\n        <Avatar src={el.avatar} alt=\"Avatar\"></Avatar>\n        <Name>{el.name}</Name>\n      </FriendsItem>\n    ))}\n  </Friends>\n);\n\nFriendList.propTypes = {\n  friends: T.arrayOf(T.shape().isRequired).isRequired,\n};\n\nexport default FriendList;\n","import styled from 'styled-components';\n\nexport const Transactions = styled.table`\n  max-width: 872px;\n  margin: 30px auto;\n  border-collapse: collapse;\n`;\n\nexport const Head = styled.tr`\n  background-color: #00bcd4;\n`;\n\nexport const HeadItem = styled.th`\n  min-width: 250px;\n  padding: 10px;\n  font-size: 13px;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  color: #fff;\n  border: 1px solid #e0e6e7;\n`;\n\nexport const Row = styled.tr`\n  text-align: center;\n  :nth-child(even) {\n    background-color: #ecf2f3;\n  }\n`;\n\nexport const RowItem = styled.td`\n  padding: 12px 0;\n  font-size: 15px;\n  text-transform: capitalize;\n  color: #5c6975;\n  border: 1px solid #e0e6e7;\n`;\n","import React from 'react';\nimport T from 'prop-types';\nimport {\n  Transactions,\n  Head,\n  HeadItem,\n  Row,\n  RowItem,\n} from './Transaction.styled';\n\nconst TransactionHistory = ({ transactions }) => (\n  <Transactions>\n    <thead>\n      <Head>\n        <HeadItem>Type</HeadItem>\n        <HeadItem>Amount</HeadItem>\n        <HeadItem>Currency</HeadItem>\n      </Head>\n    </thead>\n    <tbody>\n      {transactions.map(el => (\n        <Row key={el.id}>\n          <RowItem>{el.type}</RowItem>\n          <RowItem>{el.amount}</RowItem>\n          <RowItem>{el.currency}</RowItem>\n        </Row>\n      ))}\n    </tbody>\n  </Transactions>\n);\n\nTransactionHistory.propTypes = {\n  transactions: T.arrayOf(\n    T.shape({\n      id: T.string.isRequired,\n      type: T.string.isRequired,\n      amount: T.string.isRequired,\n      currency: T.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profiles from './Profile/Profile';\nimport user from './Profile/user.json';\nimport Statistic from './Statistics/Statistics';\nimport stats from './Statistics/statistical-data.json';\nimport FriendList from './Friends/Friend';\nimport friends from './Friends/friends.json';\nimport TransactionHistory from './Transaction/Transaction';\nimport transactions from './Transaction/transactions.json';\n\nconst App = () => (\n  <div>\n    <Profiles user={user} />\n    <FriendList friends={friends} />\n    <Statistic stats={stats} />\n    <TransactionHistory transactions={transactions} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}